mode(matrix(0,2,3))
matrix(0,2,3)
matrix(1,2,3)
x=rep(1:3,3,each = 3)
length(x)
v1 <- c(1,2,3,4,5)
v1[-1]
v1[-c(2,4)]
x=matrix(1:10,5,T)
colnames(x) = c('a','b','c','d','e')
x
c(1,2,3) * c(1,2,3) # 벡터의 곱
x = matrix(1:9 ,3,3)
r = apply(x,1,function(x){x * c(1,2,3)})
r = matrix(r,3,3,byrow = T)
r
class(r)
mode(r)
ar <- array(1:8,c(2,2,2))
ar
ar[,,1]
ar[1,,]
ar[,1,]
ar[,1,1]
ar[,1,2]
matrix(ar[,,],2,)
X<- list('lee','이순신',c(1,2,3))
names(X) = c('a','b','c')
X
X[1]
x[[1]]
X[[1]]
X$a
lapply(X,max )
sapply(X,max)
unlist(lapply(X,max))# = sapply(X,max)
a = list(c1=list(1,2,3),c2 = list(10,20,30))
sapply(a,max)
lapply(a,max)
do.call(cbind, a)
cbind(a[[1]],a[[2]])        
a[[1]]
a[["c1"]]
a["c1"]
a[1]
do.call(cbind,a)
cbind(a[[1]],a[[2]])
x='asdasd'
nchar(x)
length(x)
srt_length(x)
substring(x,2,4)
install.packages('stringr')
library(stringr)
str_extract_all(x,'[^0-9]{3}')
str_sub(a,2,4)
str_length(x)
str_locate_all(x,'asd')
str_sub(x,1,3)
str_to_lower(x)
str_to_upper(x)
nchar(x)
regexpr("asd",x)
substring(x,2,4)
str_replace(x,'asd','dsa')
str_replace_all(x,'asd','dsa')
gsub("dsa","asd",x)
paste0(x,'abc')
paste(unlist(X))
paste(X,collapse = ',')
b=strsplit(x,'')
class(b)
mode(b)
for (i in seq(2,10,2)){
  cat(i,'\n')
}
for (i in 1:10){
  if(i%%2==0){next}
  else{print(i)}
}
score = c(80,90)
name = c('a','b')
i=1
for (s in score){
  cat(name[i],'의 점수 : ',s,'입니다','\n')
  i<- i+1
}

install.packages('RSADBE')
library(RSADBE)
data(Bug_Metrics_Software)
