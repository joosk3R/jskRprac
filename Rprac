install.packages("XML")
install.packages("httr")
library("XML")
library(httr)
url<-"https://ssti.org/blog/useful-stats-capita-personal-income-state-2010-2015"
get_url<-GET(url)
get_url$content
rawToChar(get_url$content)
html_cont <-readHTMLTable(rawToChar(get_url$content),stringsAsFactors = F)
html_cont <- as.data.frame(html_cont)
html_cont

getwd()
setwd(readClipboard())
getwd()
student <- read.table("student.txt")
student
student1 <- read.table("student1.txt", header =T)
student1
student2 <- read.table("student2.txt",header = T,sep = ';')
student2 
student3 <- read.table("student3.txt",header = T,sep = " ",na.strings = '-')
student3
student4<-read.table("student4.txt",header = T,sep=',',na.strings = '-')
student4

install.packages("data.table")
library(data.table)
stock <- fread("stock.csv") #대용량 데이터(>1GB)을 빠르게 읽음
stock <- read.csv('stock.csv')
class(stock)
install.packages("xlsx")
install.packages("rJava")
library(xlsx)
library(rJava)
studentex <- read.xlsx("studentexcel.xlsx",sheetIndex = 1,encoding = "UTF-8")
studentex
class(studentex)
write.table(student,"student_new.txt",row.names = F,quote = F) # txt파일 생성
  student_new <- read.table("student_new.txt",header =T)
student_new 

write.csv(student4,"student4_new.csv",row.names = F,quote =F,fileEncoding = "UTF-8") #csv파일 생성
student4_new <- read.csv("student4_new.csv",na.strings = '-',fileEncoding = "UTF-8")
student4_new
fwrite(stock,"stock_new.csv") #저장
write.xlsx(studentex,"studentex_new.xlsx",row.names = F)
studentex

GDP_ranking <- read.csv("http://databank.worldbank.org/data/download/GDP.csv",skip=3)[2:206,-c(3,6)]
head(GDP_ranking)
GDP_ranking15<-head(GDP_ranking,15)
names(GDP_ranking15)<- c('Code',"Ranking","Nation",'GDP')
library(stringr)
num_gdp <- as.numeric(str_replace_all(GDP_ranking15$GDP,',',''))/1000
GDP_ranking15$GDP <- num_gdp
barplot(GDP_ranking15$GDP , col=rainbow(15),xlab="국가",ylab='단위',names.arg = GDP_ranking15$Nation,las = 2, cex.names =0.8)
setwd(readClipboard())
data <- read.csv("data.csv")
data
library(reshape2)
wide<- dcast(data, Customer_ID ~ Date, value.var = "Buy",sum)
wide
long<-melt(wide, id = 'Customer_ID')
long
names(long)[2:3] = c("Date","Buy")
long

#melt를 사용해서  wide -> long 으로 바꿈
data("smiths")
smiths
long <- melt(smiths,id=1:2)
long

# dcast 사용해서 long -> wide 변경
dcast(long,subject +time ~variable,value.var = 'value')
dcast(long,subject+time ~... )

#3차원 배열형식 변경
data("airquality")
airquality
str(airquality)
air_melt <-melt(airquality,id = c("Month","Day"), na.rm = T)
head(air_melt)

#acast(data,Y~X~value)
acast<- acast(air_melt,Day~Month~variable) #air_mlet에서 variable인 날씨에 대한 array 배열
acast
class(acast)
a=1:5
class(a)
a
a=c(a)
a
class(a)
paste("file",a,'.txt',collapse = ',')
num<-scan()
df<-data.frame()
df=edit(df)
df
student <- read.table(file.choose(),header = T)
student

a=c(1:3)
b=c('a','b','c')
c=c('ㄱ','ㄴ','ㄷ')
df1= data.frame(a,b,c)
df1
which(df1$a == 2)
df1[which(df1$b == "c"),]

data("VADeaths")
barplot(VADeaths,beside = T,main = "Death",col = rainbow(5))
legend(19,70,rownames(VADeaths),cex = 0.8,fill = 'blue')
x=rnorm(1000)
y=rnorm(1000)
xy=matrix(c(x,y),length(x),2)
plot(xy,col=densCols(xy),cex=2,pch=16)       

data("iris3")
iris3
str(iris3)
colnames(iris3)
plot(iris3,pch = 21,cex = 0.8,xlab =)
plot(iris[,1],iris[,3],col = iris[,5],main = 'iris 데이터 테이블 산포도 차트트')
names(iris)


#8.2번
library(regbook)
data("restaurant")
sdfit <- lm(Y~X + I(X^2),aggregate(Y~X,restaurant, sd))
s<- predict(sdfit, newdata = data.frame(X=restaurant$X))
w <- 1/s^2
w
fit.wls <- lm(Y~X, restaurant ,weights = w)
deviance(fit.wls)
sum(resid(fit.wls)^2)
sum(w*resid(fit.wls)^2)
summary(fit.wls)
anova(fit.wls)
#잔차와 SSE값이 동일하다.

#8.6번
data("stackloss")
fitM1 <- rlm(stack.loss~.,stackloss,method = "M",psi = psi.bisquare )
fitM2 <- rlm(stack.loss~.,stackloss,method = "M",psi = psi.bisquare , c=3)
summary(fitM2)
#Y = -36.7831 + 0.8329X1 + 0.4795X2 + -0.0764X3
par(mfrow = c(2,2))
plot(fitM1, which= 7:8)
plot(fitM2, which= 7:8)
#산점도를 그려 봤을때, 위에 c= 4.685 일때와 달리1,3 번 자료값이 특이값에 추가되어
#높은 지렛점과 동시의 특이점인 나쁜 지렛점이 된다.

drawStars <- function(num){
  if (num>12 | num<2){
    a<-cat("2부터 10까지의 정수를 입력하시오!!") }
  else{b<-cat("높이가",num,"인 직각 삼각형\n")
  for(i in 1:num){
    a=rep(" ",num-i)
    b=rep("*",i)
    cat(a,b)
    cat('\n')
  }
  }
}
drawStars(10)
dat <- c("2022/01/15,2500 Won,Samsung Card,K Mart",
         "2022/01/16,30000 Won,Hyundai Card,H Mart",
         "2022/01/20,15000 Won,Kookmin Card,C Mart")
library(stringr)
binddat<-str_c(dat,collapse = '|')
binddat

drawStars <- function(num){
  if (num>10 | num<2){a<-cat("2 부터 10 까지의 정수를 입력하시오!!") }
  else{b<-cat("높이가",num,"인 직각 삼각형")}
}
drawStars(13)
drawStars(4)
  #8.9번
#1
data("longley")
pairs(longley,pch = 16)
#x1,x2,x4,x5 들에게 강력한 양의 선형관계가 있다.
#비슷한 그래프가 여럿 있는것으로 보아 다중 공선성의 존재 가능성이 있다.

#2
fit<-lm(Employed ~ ., longley)
summary(fit)
summary(vif(fit))
a=cor(longley[1:6])
diag(solve(a)) #VIF값
b=eigen(a)$values #고유값값
sqrt(max(b)/b) #조건지수
#VIF의 값이 10보다 큰 설명변수가 Armed.Forces를 제외한 모두임으로 다중공선성이 존재한다.
#0의 가까운 고유값이 2개 이므로 선형종속이 2개 있다고 파악할 수 있다.
#조건지수가 30이상이 2개 이므로 선형종속이 2개 있다고 파악할 수 있다. 

#3
par(mfrow = c(1,1))
fitr <- lm.ridge(Employed~., longley,lambda = seq(0,0.1,0.01))
plot(lm.ridge(Employed~., longley,lambda = seq(0,0.1,0.01)))
select(fitr)
#lambda 는 0.03~0.07 사이 사용 0.045로 설정

#4
ftt.ridge <-lm.ridge(Employed~ .,longley,lambda = 0.045)
ftt.ridge
#계수들이 전부 변하고 GNP 설명변수는 부호가 바뀌었다.

#5
pr <- princomp(longley[1:6],cor = T) #특이값 분해를 이용한 주성분분석
summary(pr)
plot(pr,type ="l",pch =16) #주성분 분석 분산도
longley.df <- data.frame(pr$scores) 
longley.df$y <- longley$Employed
fit.longley <- lm(y ~., longley.df) 
summary(fit.longley)
#불완전 주성분 회귀귀
fit.pcr <- pcr(Employed ~.,longley,ncomp =3)
summary(fit.pcr)
coef(fit.pcr) 

#6
coef(fit) #중회귀
coef(ftt.ridge) #능형회귀
coef(fit.pcr) #불완전 주성분 회귀
#중회귀 모형 :  Y = -3482 + 0.01506X1 -0.03582X2 -0.02050X3 -0.01033X4 -0.05110X5 +1.829
#능형회귀모형 : Y = -1372 + 0.03487X1 +0.00987X2 -0.01262X3 -0.00736X4 -0.06703X5 +0.738 
#불완전 주성분회귀: Y = -358.7 + 0.09780X1 + 0.01267X2 -0.01161X3 -0.005987X4 + 0.15386X5 + 0.20295 
getwd()
1)
a<-pnorm(sqrt(3.841),0,1)-pnorm(-sqrt(3.841),0,1)
round(a,2)

b<-pchisq(3.841,1)
round(b,2)

(2)
var<-100;n=11;sam_var=205;chi=(n-1)*sam_var/var
1-pchisq(chi,n-1)
round(1-pchisq(chi,n-1),3)
pchisq(chi,n-1,lower.tail = F)
round(pchisq(chi,n-1,lower.tail = F),3)

3
n=25;m=120;s=6;x=117;t=(x-m)/(s/sqrt(n))
round(pt(t,n-1),2)

4
n=100;m=120;s=5;x=119;t=(x-m)/(s/sqrt(n))
t
pnorm(t,0,1)
mean = 120; sd = 5; n=100; xbar = 119; (z = (xbar-mean)/(sd/sqrt(n)))
pnorm(z)
round(pnorm(z),4)

5
qf(0.05,9,9)
1/qf(0.05,9,9)
df1=9;df2=9
1/0.707
qf(0.95,df1,df2)
qf(0.95,df1,df2)*4/9
round(qf(0.95,df1,df2)*4/9,3)

dnorm(1.96)

6
qf(0.05,15,8,lower.tail = F)
qf(0.05,9,9)*4/9

(2)
df1=8;df2=15
qf(0.05,df1,df2)
round(qf(0.05,df1,df2),2)

qf(0.05,4,5,lower.tail = F)
df1=4;df2=5
qf(0.95,df1,df2)

plant_weight <- c(3.36,1.98,3.80,2.35,5.94,2.96,5.30,3.95,3.33,3.43,9.26,4.24,3.33,2.52,2.90,2.70,4.41,2.00,3.67,2.30,
                  4.50,4.14,9.85,3.73,1.50,1.93,1.93,1.78,3.63,2.65,4.14,2.02,4.42,2.53,9.00,3.88,2.10,2.22,7.27,4.11)
a=table(plant_weight)
b=prop.table(a)
a
b
hist(plant_weightt)
hist(a,breaks = "Sturges",col='lightblue',xlim = c(0,10))
hist(b,breaks = "Sturges",col='lightblue')

plant_weight <- c(3.36,1.98,3.80,2.35,5.94,2.96,5.30,3.95,3.33,3.43,9.26,4.24,3.33,2.52,2.90,2.70,4.41,2.00,3.67,2.30,
                  4.50,4.14,9.85,3.73,1.50,1.93,1.93,1.78,3.63,2.65,4.14,2.02,4.42,2.53,9.00,3.88,2.10,2.22,7.27,4.11)
#도수분포표
table(plant_weight)
freq.table<-table(plant_weight)
freq.table
#상대도수분포표
prop.table <-prop.table(freq.table)
prop.table

#도수분포표에 대한 히스토그램
hist(freq.table, breaks = 'Sturges', col = 'light blue')
#상대도수분포표에 대한 히스토그램
 hist(prop.table, breaks = 'Sturges', col = 'light blue')
# 도수다각형
hist.result = hist(plant_weight)
lines(x=hist.result$mids, y=hist.result$counts, type = 'b', col = 'red', pch=20, lwd = 2)
#상자그림
boxplot(plant_weight, main = 'plant weight', col = 'light blue')
#줄기-잎 그림

a1 = c(5,4,8,6,3)
a2 = c(9,7,8,6,9)
a3 = c(3,5,2,3,7)
a4 = c(2,3,4,1,4)
a5 = c(7,6,9,4,7)
pain= c(a1,a2,a3,a4,a5)
group =rep(c('a1','a2','a3','a4','a5'),c(5,5,5,5,5))
pain.dat<- data.frame(group,pain)
head(pain.dat)
attach(pain.dat)
tapply(pain,group,sum)
tapply(pain,group,mean)
sum(pain)
mean(pain)
boxplot(pain~group)
aov<-aov(pain~group,pain.dat)
summary(aov)

A = c(4,7,6,6)
B = c(5,1,3,5,3,4)
C = c(8,6,8,9,5)
sell<-c(A,B,C)
group= rep(c("A","B","C"),c(4,6,5))
sell.dat<-data.frame(sell,group)
attach(sell.dat)
tapply(sell,group,sum)
tapply(sell,group,mean)
aov<-aov(sell~group,sell.dat)
summary(aov)

su=c(64,72,74,55,57,47,59,66,58,58,57,53)
bi=rep(c(1,2,3,4),each = 3)
pum = rep(c(1,2,3),4)
mil.su <-data.frame(su,bi,pum)
mil.su$bi=factor(mil.su$bi,levels = c(1,2,3,4),labels = c('A1','A2',"A3","A4"))
mil.su$pum= factor(mil.su$pum,levels = c(1,2,3),labels = c('B1','B2',"B3"))
mil.su
with(mil.su,interaction.plot(x.factor = bi,trace.factor = pum,response = su,type = "b",legend = T,ylab = "밀수확량",pch = c(1,19),fun=mean))
aov.dat<-aov(su~bi+pum,mil.su)
summary(aov.dat)


wt=c(64, 66, 70, 72, 81, 64, 74, 51, 65, 65, 63, 58, 57, 43, 52, 47, 58, 67, 59, 68, 65, 66, 71, 59, 58, 39, 42, 58, 41, 46, 57, 61, 53, 53, 59, 38)
sa=rep(c(1,2,3,4),each=9)
pig =rep(c(1,2,3),4,each=3)
wt.dat<-data.frame(wt,sa,pig)
wt.dat
wt.dat$sa = factor(wt.dat$sa,levels = 1:4,labels = c("a1",'a2','a3','a4'))
wt.dat$pig = factor(wt.dat$pig,levels = 1:3,labels = c("b1",'b2','b3'))
par(mfrow =c(2,2))
boxplot(wt~sa*pig,data = wt.dat)
boxplot(wt~sa,data = wt.dat)
boxplot(wt~pig,data = wt.dat)
aov<-aov(wt~sa*pig,wt.dat)
summary(aov)
with(wt.dat,tapply(wt,list(sa,pig),sum))
with(wt.dat,tapply(wt,list(sa,pig),mean))
with(wt.dat,interaction.plot(x.factor = sa,trace.factor = pig,response = wt,pch = c(1,19),legend = T ,type = 'b'),fun=mean) 

?barplot
death <- c(2,1,2,4,2,5,3,3,5,6,3,8,3,3,6,3,6,5,3,5,2,6,2,3,4,3,2,9,2,2,3,2,7,3,2,2,1,2,4,2,5,3,3,5,6,3,8,3,3,6,3,6,5,3,5,2,6,2,3,4,3,2,9,2,2,3,2,7,3,2,10,6,2,3,1,2,3,3,4,3,2,6,2,2,3,2,3,4,3,2,3,5,2,5,5,3,4,3,6,2,1,2,3,2,6,3,3,6,3,2,3,6,4,6,5,3,5,6,2,6,3,2,3,2,6,2,6,3,3,2,6,9,6,3,6,6,2,3,2,3,5,3,5,2,3,2,3,3,1,3,3,2,3,3,4,3,6,6,3,3,3,2,3,3,6)
par(mfrow=c(1,1))
table(death)
hist(death,breaks = "Sturges")
freq.table<-table(death)
barplot(height = freq.table, col = 4, main = 'barplot of death reason', ylab = 'frequency', xlab = 'death reason')
cause <- c("감염성 질환","각종 암","순환기 질환","호흡기 질환","소화기 질환","각종 사고사","비뇨기 질환","정신병","노환","신경계 질환")
barplot(height = freq.table, col = rainbow(10), main = 'barplot of death reason', ylab = 'frequency', xlab = 'death reason', legend.text = cause, args.legend = list(x='topright'))
pie(freq.table, label = cause,border = "blue", main = 'pie of death reason', cex = 0.7)
x='topright'
x
height <- c(181,161,170,160,158,168,162,179,183,178,171,177,163,158,160,160,158,173,160,163,167,165,163,173,178,170,167,177,175,169,152,158,160,160,159,180,169,162,178,173,173,171,171,170,160,167,168,166,164,173,180)
weight <- c(78,49,52,53,50,57,53,54,71,73,55,73,51,53,65,48,59,64,48,53,78,45,56,70,68,59,55,64,59,55,38,45,50,46,50,63,71,52,74,52,61,65,68,57,47,48,58,59,55,74,74)
cor(height, weight)
(data.frame(height,weight))
plot(x = height, y = weight, xlab = 'height(cm)', ylab = 'weight(kg)', main = 'height(cm) and weight(kg)')

library(data.table)
library(stringr)
setwd(readClipboard())
d1 =read.csv("cebu.csv",header = T,sep=",")
d2 =read.table("cebu.csv",header = T,sep = ",")
d3 =fread("cebu.csv",header = T)
paste0("CEBU",d1$ID)
a<-str_replace_all(d1$ID,"CEBU","")
colSums(is.na(d1))
d1 <- subset(d1,d1$BRSTFEED != "NA")
a=apply(d1,2,mean,na.rm= T)
a
as.numeric(d1[,1])

for(i in 1:nrow(d1)){
  for(j in 1:ncol(d1)){
    if(is.na(d1[i,j]) ==T ){
      d1[i,j] = a[j]
    }
  }
}
hist(d1$HEIGHT,breaks = 20)
library(plyr)
library(reshape2)
b <-ddply(d1,.(GENDER),summarise,avg = mean(WEIGHT))
b
d1_25<-filter(d1,AGE>=25)
d1_25
dcast(d1_25,ID~AGE,value.var = "HEIGHT",sum)
write.table(d1,"cebu_new.csv",row.names = F,quote = F)
d<-melt(d1_25,id= c('ID',"AGE"))
d
acast(d,ID~AGE~variable)

library(data.table)
#(1)
d1 <-read.csv("https://canvas.ssu.ac.kr/courses/10411/files/244340/download?verifier=MxF4lhRP10gxLaPk6FPZTKtE3VA0ezVKefQLPtL1")
d2 <-fread("https://canvas.ssu.ac.kr/courses/10411/files/244340/download?verifier=MxF4lhRP10gxLaPk6FPZTKtE3VA0ezVKefQLPtL1")
head(d1)
#(2)
d1$period <-str_replace_all(d1$period,'-','~')
head(d1$period)
#(3)
d2<- str_sub(d1$period,6,8)
d2<-paste0("~19",d2)
d2
d1$period <- str_replace_all(d1$period,"~[0-9]{2}",d2)
head(d1$period)
#(4)
apply(is.na(d1),2,sum)
na.omit(d1$u5mr)
d1<-subset(d1, is.na(d1$u5mr) != T )

#(5)
hist(d1$u5mr, col = "lightblue",breaks = 20,freq = F,)
lines(density(d1$u5mr),col = "red")

#(6)

gdppc.na<-ddply(d1,.(cname),summarise, avg=mean(gdppc,na.rm = T))
gdppc.na
#(7)
as.numeric(d1$gdppc)
as.numeric(gdppc.na$avg)
head(gdppc.na)
for(i in 1:nrow(d1)){
  for(j in 1:nrow(gdppc.na)){
    if(d1$cname[i] == gdppc.na$cname[j] & is.na(d1$gdppc[i]) == T ){
      d1$gdppc[i] = gdppc.na$avg[j]
    }
  }
}

#(8)
d1_360 <-filter(d1,u5mr>360)

#(9)
d1.table<-dcast(d1_360,period~cname,value.var = "gdppc",sum)
head(d1.table)

#(10)
write.csv(d1,"mortality_new.csv",row.names=F,quote = F)

a1=c(1,2,3,4,5)
a2=c(1,2,3,4,5)
a3=c(1,2,3,4,5)
a4=c(1,2,3,4,5)
a5=c(1,2,3,4,5)
pain = c(a1,a2,a3,a4,a5)
group = c('a1','a2','a3','a4','a5')
group = rep(group,c(5,5,5,5,5))
group
pain.dat = data.frame(group,pain)
attach(pain.dat)
tapply(pain, group, sum)
tapply(pain, group, mean)
aov.out <- aov(pain~group,pain.dat)
summary(aov.out)

# install packages
install.packages("DBI")   # R Database Interface
install.packages("rJava") # rJava 패키지 (JRE 설치 필요)
install.packages("RJDBC") # JDBC()함수 제공

# load packages
library(DBI)
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_221") # path for JRE
library(rJava)
library(RJDBC) # after loading rJava

################ MariaDB ###############
drv <- JDBC(driverClass="com.mysql.cj.jdbc.Driver", 
            classPath = "C:/mysql-connector-java-8.0.18.jar")
conn <- dbConnect(drv, "jdbc:mysql://127.0.0.1:3306/work?serverTimezone=UTC", "scott", "tiger")
############################################ 

#10장
#(1)
salary <- read.table(file = "C:/Download/salary.txt",header = TRUE)
fi2.sal <- glm(gender~salary+ year, family = binomial(link="logit"),data = salary)
summary(fi2.sal)  
qchisq(0.95,48) #기준값
#적합된 모형
#적합도가 기준값 보다 작다, D(=47.343) < 65.147 이므로 적합도가 좋다
# log(piehat/(1-piehat)) = 1.792 -8.009*1^(-5)x1-1.865^(-1)x2
coeff <- coef(fi2.sal)
coeff
exp(coeff) #오즈비 계산

#(2)
계수 추정값으로 각각의 오즈비를 구할 수 있다.
exp(-0.08009)
#연봉이 $1000달러 증가할 때마다 "여성일 확률" 대 "남성일 확률"비인 오즈는
# exp(-0.08009) = 0.92배씩 증가한다

exp(-0.1865)
# 근무한 연수가 1증가할 때마다 "여성일 확률" 대 "남성일 확률"비인 오즈는
# exp(-0.08009) = 0.83배씩 증가한다

#(3)
#year을 추가 했을때 salary의 p-value 값이 0.05보다 크므로 통계적으로 유의하지 않다. 
#즉, 연봉이 높을수록 남성일 확률이 높지만 그 차이는 통계적으로 유의하지 않다
#남녀간의 연봉의 차이가 있지만 성별과는 관계가 없다

#(4)
plot(gender~year,data = salary)
with(salary,lines(lowess(year,gender),lty =2,col=2))
curve(exp(1.792-0.1865*x)/(1+exp(1.792-0.1865*x)),add = T,col=4)
#그래프를 보면 오래 근무한 여성보다 오래 근무한 남성의 수가 더 많다.
#성별의 차이로 인한 연봉의 차이가 생겼다기 보단 근무한 연수의 차이로 인한
#남여의 연봉차이가 생겼다고 예측할 수 있다.

#(5)
salary$gender <-ifelse(salary$gender == 1,0,1) #여성을 0으로 남성을 1로 변경
fi3.sal <- glm(gender~salary+ year, family = binomial(link="logit"),data = salary)
summary(fi3.sal)  
plot(gender~year,data = salary)
#추정량의 변화가 없다.

#10-4
gender1 <- rep(1,320)
gender2 <- rep(0,410)
gender <- c(gender1,gender2)
agree <-c(rep(1,192),rep(0,128),rep(1,123),rep(0,287))
agree <-data.frame(gender,agree)
gendagree <- glm(agree~gender,family = binomial(link = "logit"),data = agree)
summary(gendagree)
exp(gendagree$coefficients)

#천성한 사람을 봤을때 "여성일 확률" 대 "남성일 확률"비인 오즈는 3.5배이다
